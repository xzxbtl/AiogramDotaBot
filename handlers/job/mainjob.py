from aiogram.types import CallbackQuery
from aiogram.enums import ParseMode
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogramproject.main import bot
from aiogramproject.base.TakeInfoBase import TakeInfo
from aiogramproject.logs import logger


def register_handlers(dp):
    @dp.callback_query(lambda query: query.data == 'Job')
    async def send_menu_dota(query: CallbackQuery):
        try:
            await query.answer("–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ –ó–∞—Ä–∞–±–æ—Ç–æ–∫ üí∏")
            await JobMenu.menu_dota(query)
        except Exception as err:
            logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {err}")

    @dp.callback_query(lambda query: query.data == "all_Jobs")
    async def all_jobs(query: CallbackQuery):
        await JobsMenu.jobs_menu(query)

    @dp.callback_query(lambda query: query.data == "back_from_jobs_menu")
    async def back_from_jobs_menu(query: CallbackQuery):
        try:
            await query.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é —Ä–∞–±–æ—Ç")
            await JobMenu.menu_dota(query)
        except Exception as err:
            logger.error(f"main job.py - –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–∏ –≤ –º–µ–Ω—é —Ä–∞–±–æ—Ç {err}")


class JobMenu:
    @staticmethod
    async def menu_dota(query: CallbackQuery):
        builder = InlineKeyboardBuilder()
        but1 = InlineKeyboardButton(text="–†–∞–±–æ—Ç—ã üíº", callback_data="all_Jobs")
        but2 = InlineKeyboardButton(text="–ò–≥—Ä—ã üéÆ", callback_data="games_jobs")
        but3 = InlineKeyboardButton(text="–°—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç üìä", callback_data="status_jobs")
        but4 = InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="Menu")
        builder.row(but1, but2, but3, but4, width=3)
        await bot.edit_message_text(chat_id=query.message.chat.id,
                                    message_id=query.message.message_id,
                                    text=f"*–í—ã –ø–æ–ø–∞–ª–∏ –≤ –ó–∞—Ä–∞–±–æ—Ç–æ–∫* üî•\n –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É –¥–ª—è "
                                         f"*–∑–∞—Ä–∞–±–æ—Ç–∫–∞*"
                                         f"\n –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –≤–∞—à–∏—Ö *—Å—Ç–∞—Ç—É—Å–æ–≤* \n –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ "
                                         f"—Ä–∞–±–æ—Ç—ã –∏–º–µ—é—Ç *—Ä–∏—Å–∫* –Ω–∞ –ø—Ä–æ–≤–∞–ª",
                                    reply_markup=builder.as_markup(),
                                    parse_mode=ParseMode.MARKDOWN)


class JobsMenu:
    @staticmethod
    async def jobs_menu(query: CallbackQuery):
        user_id = query.from_user.id
        status, balance, username, confirmed = await TakeInfo.take_all_info_about_user(user_id)
        builder = InlineKeyboardBuilder()
        but8 = InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_from_jobs_menu")
        if status != "Divine ‚ò†Ô∏è" and status != "Titan üî•":
            but1 = InlineKeyboardButton(text="–ü–æ—Ñ–∞—Ä–º–∏—Ç—å –≤ –ª–µ—Å—É üå¥", callback_data="farm_creeps_menu")
            but2 = InlineKeyboardButton(text="–í—ã–π—Ç–∏ –Ω–∞ –ª–∞–π–Ω üö∏", callback_data="exit_from_line_menu")
            but3 = InlineKeyboardButton(text="–ù–∞–ø–∞—Å—Ç—å –Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞ ü™ì", callback_data="attack_enemy_support")
            but4 = InlineKeyboardButton(text="–°–ª–æ–º–∞—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–π –≤–∞—Ä–¥ ‚öíÔ∏è", callback_data="destroy_enemy_ward_menu")
            builder.row(but1, but2, but3, but4, but8, width=2)
        else:
            but1 = InlineKeyboardButton(text="–ü–æ—Ñ–∞—Ä–º–∏—Ç—å –≤ –ª–µ—Å—É üå¥", callback_data="farm_creeps_menu")
            but2 = InlineKeyboardButton(text="–í—ã–π—Ç–∏ –Ω–∞ –ª–∞–π–Ω üö∏", callback_data="exit_from_line_menu")
            but3 = InlineKeyboardButton(text="–ù–∞–ø–∞—Å—Ç—å –Ω–∞ —Å–∞–ø–ø–æ—Ä—Ç–∞ ü™ì", callback_data="attack_enemy_support")
            but4 = InlineKeyboardButton(text="–°–ª–æ–º–∞—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–π –≤–∞—Ä–¥ ‚öíÔ∏è", callback_data="destroy_enemy_ward_menu")
            but5 = InlineKeyboardButton(text="–£–±–∏—Ç—å –≤—Ä–∞–∂–µ—Å–∫–æ–≥–æ –∫–æ—Ä–∞ ü©∏", callback_data="kill_enemy_core")
            but6 = InlineKeyboardButton(text="–°–ª–æ–º–∞—Ç—å —Ç–∞–≤–µ—Ä üí£", callback_data="destroy_tower_menu")
            but7 = InlineKeyboardButton(text="–ó–∞–∫–æ–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ñ–∞–π—Ç ‚öîÔ∏è", callback_data="call_team_for_fight_menu")
            builder.row(but1, but2, but3, but4, but5, but6,but7, width=2)
            builder.row(but8, width=1)

        await bot.delete_message(message_id=query.message.message_id, chat_id=query.message.chat.id)
        await bot.send_message(chat_id=query.message.chat.id,
                               reply_markup=builder.as_markup(),
                               text=f"*–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ä–∞–±–æ—Ç—É* \n "
                                    f"–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∫–∞–∂–¥–∞—è —Ä–∞–±–æ—Ç–∞ –∏–º–µ–µ—Ç —Å–≤–æ–µ–π "
                                    f"—à–∞–Ω—Å *—Ä–∏—Å–∫–∞* \n –ù–æ —ç—Ç–æ—Ç —Ä–∏—Å–∫ –æ–ø—Ä–∞–≤–¥–∞–Ω "
                                    f"–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é *–±–æ–ª—å—à–µ–π* –Ω–∞–≥—Ä–∞–¥—ã \n –£–¥–∞—á–∏ <3",
                               parse_mode=ParseMode.MARKDOWN)
